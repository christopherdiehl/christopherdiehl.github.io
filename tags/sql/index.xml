<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sql on Christopher Diehl&#39;s blog</title>
    <link>https://christopherdiehl.github.io/tags/sql/</link>
    <description>Recent content in Sql on Christopher Diehl&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy; &lt;a href=&#34;https://github.com/christopherdiehl&#34;&gt;Christopher Diehl&lt;/a&gt; 2018</copyright>
    <lastBuildDate>Thu, 23 Jan 2020 14:16:20 +0000</lastBuildDate>
    
	<atom:link href="https://christopherdiehl.github.io/tags/sql/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Examining Raleigh&#39;s crime data using SQL</title>
      <link>https://christopherdiehl.github.io/posts/sql-optimizations/</link>
      <pubDate>Thu, 23 Jan 2020 14:16:20 +0000</pubDate>
      
      <guid>https://christopherdiehl.github.io/posts/sql-optimizations/</guid>
      <description>SQL Optimizations on a Raleigh Crime Dataset. In my opinion, SQL is easy to get working initially, but optimizing SQL is a whole different beast. Thankfully, I recently had the chance to optimize a whole bunch of SQL for one of our critical platforms resulting in an over 300% reduction in execution time. While I can&amp;rsquo;t promise the same result for anyone following this article, I do outline some of my learnings below using the most recent Raleigh Crime dataset.</description>
    </item>
    
  </channel>
</rss>